{"ast":null,"code":"var _jsxFileName = \"E:\\\\WEB DEV\\\\REACT\\\\EventPal\\\\src\\\\components\\\\AuthModal.js\",\n  _s = $RefreshSig$();\n/**\n * @fileoverview Authentication modal component for user login and registration\n * \n * The AuthModal provides a comprehensive authentication interface with tabbed\n * login and registration forms. It includes form validation, loading states,\n * error handling, and smooth animations for enhanced user experience.\n * \n * Features:\n * - Tabbed interface for login/registration switching\n * - Real-time form validation with error display\n * - Loading states with visual feedback\n * - Animated form interactions using custom hooks\n * - Overlay click-to-close functionality\n * - Integration with AppContext for authentication\n * - Responsive design with accessibility support\n * \n * @author EventPal Team\n * @version 1.0.0\n */\n\nimport React, { useState } from 'react';\nimport { useApp } from '../context/AppContext';\nimport { useButtonAnimation } from '../hooks/useAnimations';\nimport './AuthModal.css';\n\n/**\n * AuthModal component for user authentication\n * \n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is currently open\n * @param {Function} props.onClose - Callback function to close the modal\n * @returns {JSX.Element|null} The authentication modal or null if not open\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  // App context for authentication functions\n  const {\n    login,\n    register\n  } = useApp();\n\n  // Form state management\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login/register\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({}); // Form validation errors\n  const [isLoading, setIsLoading] = useState(false); // Submission loading state\n\n  // Animation refs for interactive elements\n  const signInTabRef = useButtonAnimation('tab');\n  const signUpTabRef = useButtonAnimation('tab');\n  const submitButtonRef = useButtonAnimation('primary');\n\n  /**\n   * Handles input field changes and clears related errors\n   * \n   * @param {Event} e - Input change event\n   */\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Update form data with new value\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error for this field when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  /**\n   * Validates form data based on current mode (login/register)\n   * \n   * @returns {boolean} True if form is valid, false otherwise\n   */\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Name validation (only for registration)\n    if (!isLogin && !formData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n\n    // Email validation\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Invalid email format';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  /**\n   * Handles form submission for login or registration\n   * Includes validation, loading states, and error handling\n   * \n   * @param {Event} e - Form submission event\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form before submission\n    if (!validateForm()) return;\n    setIsLoading(true);\n    try {\n      // Simulate API call delay for realistic UX\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      if (isLogin) {\n        // Login existing user with email and password\n        await login({\n          email: formData.email,\n          password: formData.password\n        });\n      } else {\n        // Register new user with full details\n        await register({\n          name: formData.name,\n          email: formData.email,\n          password: formData.password\n        });\n      }\n\n      // Close modal on successful authentication\n      onClose();\n\n      // Reset form state for next use\n      setFormData({\n        name: '',\n        email: '',\n        password: ''\n      });\n      setErrors({});\n    } catch (error) {\n      // Display authentication errors to user\n      setErrors({\n        general: error.message || 'Authentication failed. Please try again.'\n      });\n    } finally {\n      // Always clear loading state\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Handles clicks on the modal overlay to close the modal\n   * Only closes if clicking directly on overlay, not modal content\n   * \n   * @param {Event} e - Click event\n   */\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Don't render anything if modal is not open\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-modal-overlay\",\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isLogin ? 'Welcome Back!' : 'Join EventPal'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          ref: signInTabRef,\n          className: `auth-tab ${isLogin ? 'active' : ''}`,\n          onClick: () => {\n            setIsLogin(true);\n            setErrors({});\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: signUpTabRef,\n          className: `auth-tab ${!isLogin ? 'active' : ''}`,\n          onClick: () => {\n            setIsLogin(false);\n            setErrors({});\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth-form\",\n        children: [errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message general\",\n          children: errors.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleInputChange,\n            placeholder: \"Enter your full name\",\n            className: errors.name ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange,\n            placeholder: \"Enter your email\",\n            className: errors.email ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleInputChange,\n            placeholder: \"Enter your password\",\n            className: errors.password ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: submitButtonRef,\n          type: \"submit\",\n          className: \"auth-submit-btn\",\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), isLogin ? 'Signing In...' : 'Creating Account...']\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fas ${isLogin ? 'fa-sign-in-alt' : 'fa-user-plus'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), isLogin ? 'Sign In' : 'Create Account']\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [isLogin ? \"Don't have an account? \" : \"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"auth-switch-btn\",\n            onClick: () => {\n              setIsLogin(!isLogin);\n              setErrors({});\n            },\n            children: isLogin ? 'Sign Up' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthModal, \"5nRKx7ZSVajbPuygU4Dq9R7Hc34=\", false, function () {\n  return [useApp, useButtonAnimation, useButtonAnimation, useButtonAnimation];\n});\n_c = AuthModal;\nexport default AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["React","useState","useApp","useButtonAnimation","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthModal","isOpen","onClose","_s","login","register","isLogin","setIsLogin","formData","setFormData","name","email","password","errors","setErrors","isLoading","setIsLoading","signInTabRef","signUpTabRef","submitButtonRef","handleInputChange","e","value","target","prev","validateForm","newErrors","trim","test","length","Object","keys","handleSubmit","preventDefault","Promise","resolve","setTimeout","error","general","message","handleOverlayClick","currentTarget","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","htmlFor","type","id","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["E:/WEB DEV/REACT/EventPal/src/components/AuthModal.js"],"sourcesContent":["/**\n * @fileoverview Authentication modal component for user login and registration\n * \n * The AuthModal provides a comprehensive authentication interface with tabbed\n * login and registration forms. It includes form validation, loading states,\n * error handling, and smooth animations for enhanced user experience.\n * \n * Features:\n * - Tabbed interface for login/registration switching\n * - Real-time form validation with error display\n * - Loading states with visual feedback\n * - Animated form interactions using custom hooks\n * - Overlay click-to-close functionality\n * - Integration with AppContext for authentication\n * - Responsive design with accessibility support\n * \n * @author EventPal Team\n * @version 1.0.0\n */\n\nimport React, { useState } from 'react';\nimport { useApp } from '../context/AppContext';\nimport { useButtonAnimation } from '../hooks/useAnimations';\nimport './AuthModal.css';\n\n/**\n * AuthModal component for user authentication\n * \n * @param {Object} props - Component props\n * @param {boolean} props.isOpen - Whether the modal is currently open\n * @param {Function} props.onClose - Callback function to close the modal\n * @returns {JSX.Element|null} The authentication modal or null if not open\n */\nconst AuthModal = ({ isOpen, onClose }) => {\n  // App context for authentication functions\n  const { login, register } = useApp();\n  \n  // Form state management\n  const [isLogin, setIsLogin] = useState(true);  // Toggle between login/register\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});       // Form validation errors\n  const [isLoading, setIsLoading] = useState(false); // Submission loading state\n\n  // Animation refs for interactive elements\n  const signInTabRef = useButtonAnimation('tab');\n  const signUpTabRef = useButtonAnimation('tab');\n  const submitButtonRef = useButtonAnimation('primary');\n\n  /**\n   * Handles input field changes and clears related errors\n   * \n   * @param {Event} e - Input change event\n   */\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    // Update form data with new value\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error for this field when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  /**\n   * Validates form data based on current mode (login/register)\n   * \n   * @returns {boolean} True if form is valid, false otherwise\n   */\n  const validateForm = () => {\n    const newErrors = {};\n    \n    // Name validation (only for registration)\n    if (!isLogin && !formData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n    \n    // Email validation\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Invalid email format';\n    }\n    \n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  /**\n   * Handles form submission for login or registration\n   * Includes validation, loading states, and error handling\n   * \n   * @param {Event} e - Form submission event\n   */\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form before submission\n    if (!validateForm()) return;\n    \n    setIsLoading(true);\n    \n    try {\n      // Simulate API call delay for realistic UX\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      if (isLogin) {\n        // Login existing user with email and password\n        await login({\n          email: formData.email,\n          password: formData.password\n        });\n      } else {\n        // Register new user with full details\n        await register({\n          name: formData.name,\n          email: formData.email,\n          password: formData.password\n        });\n      }\n      \n      // Close modal on successful authentication\n      onClose();\n      \n      // Reset form state for next use\n      setFormData({ name: '', email: '', password: '' });\n      setErrors({});\n      \n    } catch (error) {\n      // Display authentication errors to user\n      setErrors({ general: error.message || 'Authentication failed. Please try again.' });\n    } finally {\n      // Always clear loading state\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Handles clicks on the modal overlay to close the modal\n   * Only closes if clicking directly on overlay, not modal content\n   * \n   * @param {Event} e - Click event\n   */\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Don't render anything if modal is not open\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"auth-modal-overlay\" onClick={handleOverlayClick}>\n      <div className=\"auth-modal\">\n        <div className=\"auth-modal-header\">\n          <h2>{isLogin ? 'Welcome Back!' : 'Join EventPal'}</h2>\n          <button onClick={onClose} className=\"close-btn\">\n            <i className=\"fas fa-times\"></i>\n          </button>\n        </div>\n\n        <div className=\"auth-tabs\">\n          <button \n            ref={signInTabRef}\n            className={`auth-tab ${isLogin ? 'active' : ''}`}\n            onClick={() => {\n              setIsLogin(true);\n              setErrors({});\n            }}\n          >\n            Sign In\n          </button>\n          <button \n            ref={signUpTabRef}\n            className={`auth-tab ${!isLogin ? 'active' : ''}`}\n            onClick={() => {\n              setIsLogin(false);\n              setErrors({});\n            }}\n          >\n            Sign Up\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"auth-form\">\n          {errors.general && (\n            <div className=\"error-message general\">{errors.general}</div>\n          )}\n\n          {!isLogin && (\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Full Name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                placeholder=\"Enter your full name\"\n                className={errors.name ? 'error' : ''}\n              />\n              {errors.name && <span className=\"error-message\">{errors.name}</span>}\n            </div>\n          )}\n\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email Address</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n              placeholder=\"Enter your email\"\n              className={errors.email ? 'error' : ''}\n            />\n            {errors.email && <span className=\"error-message\">{errors.email}</span>}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleInputChange}\n              placeholder=\"Enter your password\"\n              className={errors.password ? 'error' : ''}\n            />\n            {errors.password && <span className=\"error-message\">{errors.password}</span>}\n          </div>\n\n          <button ref={submitButtonRef} type=\"submit\" className=\"auth-submit-btn\" disabled={isLoading}>\n            {isLoading ? (\n              <>\n                <div className=\"spinner-small\"></div>\n                {isLogin ? 'Signing In...' : 'Creating Account...'}\n              </>\n            ) : (\n              <>\n                <i className={`fas ${isLogin ? 'fa-sign-in-alt' : 'fa-user-plus'}`}></i>\n                {isLogin ? 'Sign In' : 'Create Account'}\n              </>\n            )}\n          </button>\n        </form>\n\n        <div className=\"auth-footer\">\n          <p>\n            {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\n            <button \n              className=\"auth-switch-btn\"\n              onClick={() => {\n                setIsLogin(!isLogin);\n                setErrors({});\n              }}\n            >\n              {isLogin ? 'Sign Up' : 'Sign In'}\n            </button>\n          </p>\n        </div>\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default AuthModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}