{"ast":null,"code":"import React from'react';import{useApp}from'../context/AppContext';import'./ThemeSwitcher.css';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeSwitcher=()=>{const{theme,toggleTheme}=useApp();return/*#__PURE__*/_jsx(\"button\",{className:\"theme-switcher\",onClick:toggleTheme,title:\"Switch to \".concat(theme==='light'?'dark':'light',\" mode\"),children:/*#__PURE__*/_jsx(\"div\",{className:\"theme-switcher-track\",children:/*#__PURE__*/_jsx(\"div\",{className:\"theme-switcher-thumb\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas \".concat(theme==='light'?'fa-sun':'fa-moon')})})})});};export default ThemeSwitcher;","map":{"version":3,"names":["React","useApp","jsx","_jsx","ThemeSwitcher","theme","toggleTheme","className","onClick","title","concat","children"],"sources":["E:/WEB DEV/REACT/EventPal/src/components/ThemeSwitcher.js"],"sourcesContent":["import React from 'react';\nimport { useApp } from '../context/AppContext';\nimport './ThemeSwitcher.css';\n\nconst ThemeSwitcher = () => {\n  const { theme, toggleTheme } = useApp();\n\n  return (\n    <button \n      className=\"theme-switcher\"\n      onClick={toggleTheme}\n      title={`Switch to ${theme === 'light' ? 'dark' : 'light'} mode`}\n    >\n      <div className=\"theme-switcher-track\">\n        <div className=\"theme-switcher-thumb\">\n          <i className={`fas ${theme === 'light' ? 'fa-sun' : 'fa-moon'}`}></i>\n        </div>\n      </div>\n    </button>\n  );\n};\n\nexport default ThemeSwitcher;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,uBAAuB,CAC9C,MAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7B,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAEC,KAAK,CAAEC,WAAY,CAAC,CAAGL,MAAM,CAAC,CAAC,CAEvC,mBACEE,IAAA,WACEI,SAAS,CAAC,gBAAgB,CAC1BC,OAAO,CAAEF,WAAY,CACrBG,KAAK,cAAAC,MAAA,CAAeL,KAAK,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,SAAQ,CAAAM,QAAA,cAEhER,IAAA,QAAKI,SAAS,CAAC,sBAAsB,CAAAI,QAAA,cACnCR,IAAA,QAAKI,SAAS,CAAC,sBAAsB,CAAAI,QAAA,cACnCR,IAAA,MAAGI,SAAS,QAAAG,MAAA,CAASL,KAAK,GAAK,OAAO,CAAG,QAAQ,CAAG,SAAS,CAAG,CAAI,CAAC,CAClE,CAAC,CACH,CAAC,CACA,CAAC,CAEb,CAAC,CAED,cAAe,CAAAD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}